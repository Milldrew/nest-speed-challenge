Task 1. generate a nest.js project named ilovebeverages
Task 2. create a CRUD resource called beverages
Task 3. fill in the create beverage dto and the update beverage dto
Task 4. Test your CRUD routes
Task 5. add mock data to the beverages service
Task 6. Validate Incoming objects
 add useGlobalPipes(new ValidationPipe()) to app
 add modules class-validator class-transformer
 use decorators like @IsString to validate the DTOs
 explain what a partial type is and how the updateBeverageDto is realized by extending createBeverage
 
Task 7. Configure the ValidationPipe to only except whitelisted data
Task 8. Transform the incoming data to DTO instances using the transform pipe. And give an example of how the transform pipe can perform type conversion.




Task 3. Make sure that yo have Error messages, DTOs that enable input validation, and handle malicious request data, as well as auto transform payloads to DTO instances
